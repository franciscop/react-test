!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("react-jsdom"),require("react-dom/test-utils")):"function"==typeof define&&define.amd?define(["exports","react-jsdom","react-dom/test-utils"],e):e((t=t||self).$={},t.ReactJSDOM,t.testUtils)}(this,(function(t,e,s){"use strict";e=e&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e,Array.prototype.flat||Object.defineProperty(Array.prototype,"flat",{configurable:!0,value:function t(){var e=isNaN(arguments[0])?1:Number(arguments[0]);return e?Array.prototype.reduce.call(this,(function(s,r){return Array.isArray(r)?s.push.apply(s,t.call(r,e-1)):s.push(r),s}),[]):Array.prototype.slice.call(this)},writable:!0}),Array.prototype.flatMap||Object.defineProperty(Array.prototype,"flatMap",{configurable:!0,value:function(t){return Array.prototype.map.apply(this,arguments).flat()},writable:!0});var r=t=>t?t.$$typeof?[e.render(t)]:(Array.isArray(t)?t:[t]).filter(t=>"object"==typeof t):[],o=t=>{if(!t)throw new Error("expect() should receive an HTMLElement or React Test instance");return t.$$typeof&&(t=r(t)),t.toArray&&(t=t.toArray()),Array.isArray(t)||(t=[t]),t.forEach(t=>{if(!t.nodeName)throw new Error("expect() should receive an HTMLElement or React Test instance")}),t},i=t=>t.cloneNode(!1).outerHTML.replace(/<\/[a-zA-Z0-9-]+>$/,"");const n=t=>`class${t.length>1?"es":""} "${t.join('", "')}"`;const a=t=>t.replace(/\s+/g," ");const c=t=>Object.entries(t).map(([t,e])=>{return`${s=t,s.replace(/([a-z\d])([A-Z])/g,"$1-$2").replace(/([A-Z]+)([A-Z][a-z\d]+)/g,"$1-$2").toLowerCase()}: ${e}`;var s}),f=t=>{let e=t.split("; ");return e[e.length-1]=e[e.length-1].replace(/;/g,""),e},l=t=>`style${t.length>1?"s":""} [${t.join(", ")}]`;expect.extend({toBeEnabled:function(t){this.affirmative=!this.isNot,t=o(t);for(let e of t){const t=i(e),s=!e.disabled;if(this.affirmative&&!s){const e=`Expected ${t} not to include the attribute "disabled"`;return{pass:!1,message:()=>e}}if(this.isNot&&s){const e=`Expected ${t} to include the attribute "disabled"`;return{pass:!0,message:()=>e}}}return{pass:!this.isNot}},toHaveAttribute:function(t,e,s){this.affirmative=!this.isNot,t=o(t);for(let r of t){const t=[...r.attributes],o=i(r),n=t.some(({name:t,value:r})=>e===t&&(s instanceof RegExp?s.test(r):"boolean"==typeof s?""===r:!s||r===s));let a="";if(s instanceof RegExp?a=" that matches "+s:s&&(a=`="${s}"`),this.affirmative&&!n){const t=`Expected ${o} to have attribute \`${e}\`${a}`;return{pass:!1,message:()=>t}}if(this.isNot&&n){const t=`Expected ${o} not to have attribute \`${e}\`${a}`;return{pass:!0,message:()=>t}}}return{pass:!this.isNot}},toHaveClass:function(t,...e){this.affirmative=!this.isNot,t=o(t);const s=e.flat();for(let e of t){const t=[...e.classList],r=i(e),o=s.filter(e=>t.includes(e)),a=s.filter(e=>!t.includes(e));if(this.affirmative&&o.length<s.length){const t=`Expected ${r} to include ${n(a)}`;return{pass:!1,message:()=>t}}if(this.isNot&&o.length){const t=`Expected ${r} not to include ${n(o)}`;return{pass:!0,message:()=>t}}}return{pass:!this.isNot}},toHaveHtml:function(t,e){this.affirmative=!this.isNot,t=o(t);for(let s of t){const t=i(s),r=s.outerHTML.includes(e.trim());if(this.affirmative&&!r){const s=`Expected ${t} to have \`${e}\``;return{pass:!1,message:()=>s}}if(this.isNot&&r){const s=`Expected ${t} not to have \`${e}\``;return{pass:!0,message:()=>s}}}return{pass:!this.isNot}},toHaveText:function(t,e){this.affirmative=!this.isNot,t=o(t);for(let s of t){const t=s.textContent,r=i(s);if(this.affirmative){if(a(t)!==a(e)){const s=`Expected ${r} to have text "${e}" but it received "${t}"`;return{pass:!1,message:()=>s}}}else if(a(t)===a(e)){const e=`Expected ${r} not to have the text "${t}"`;return{pass:!0,message:()=>e}}}return{pass:!this.isNot}},toHaveValue:function(t,e){if(this.affirmative=!this.isNot,(t=o(t)).length>1)throw new Error("Cannot check multiple elements for values. Please pass only one element.");const s=t[0],r=s.tagName.toLowerCase();if("input"===r&&["checkbox","radio"].includes(s.type))throw new Error('Cannot check .toHaveValue() for input type="checkbox" or type="radio".');const n=i(s);let a=!1;if("input"===r)a="number"===s.type?Number(s.value)===e:s.value===e;else if("textarea"===r)a=s.value===e;else{if("select"!==r)throw new Error("Not a valid element that has a value attribute. Please insert an element that has a value.");a=[...s.options].find(t=>t.selected).value===e}if(this.affirmative&&!a){const t=`Expected ${n} to have value=${e}`;return{pass:!1,message:()=>t}}if(this.isNot&&a){const t=`Expected ${n} not to have value=${e}`;return{pass:!0,message:()=>t}}return{pass:!this.isNot}},toMatchSelector:function(t,e){this.affirmative=!this.isNot,t=o(t);for(let s of t){const t=i(s),r=s.matches(e);if(this.affirmative&&!r){const s=`Expected ${t} to match selector, ${e}`;return{pass:!1,message:()=>s}}if(this.isNot&&r){const s=`Expected ${t} not to match selector, ${e}`;return{pass:!0,message:()=>s}}}return{pass:!this.isNot}},toHaveStyle:function(t,e){this.affirmative=!this.isNot,t=o(t);for(let s of t){const t=i(s),r=Object.entries(s.style._values).map(([t,e])=>`${t}: ${e}`);let o="string"==typeof e?f(e):c(e);if(this.affirmative){const e=o.filter(t=>!r.includes(t));if(e.length){const s=`Expected ${t} to include ${l(e)}`;return{pass:!1,message:()=>s}}}if(this.isNot){const e=o.filter(t=>r.includes(t));if(e.length){const s=`Expected ${t} not to include ${l(e)}`;return{pass:!0,message:()=>s}}}}return{pass:!this.isNot}}});const u=function(t,e={}){return this instanceof u?(this.events=e.events||{},s.act(()=>{window.addEventListener=(t,e)=>{this.events[t]=this.events[t]||[],this.events[t].push(e)},document.addEventListener=(t,e)=>{this.events[t]=this.events[t]||[],this.events[t].push(e)},this.nodes=r(t)}),this):new u(t,e)};u.prototype[Symbol.iterator]=function*(){for(let t of this.nodes)yield t},u.prototype.attr=function(t){const e=this.first();return e&&e.getAttribute(t)},u.prototype.click=function(...t){const e=t.find(t=>"string"==typeof t),s=t.find(t=>"number"==typeof t);return this.find(e).trigger("click",s)},u.prototype.data=function(t){return this.attr("data-"+t)},u.prototype.find=function(t){return t?this.map(e=>[...e.querySelectorAll(t)]):this},u.prototype.get=function(t=0){const e=this.toArray();return t<0&&(t=e.length+t),e[t]},u.prototype.first=function(){return this.get(0)||null},u.prototype.html=function(){const t=this.first();return t?t.outerHTML:""},u.prototype.is=function(t="*"){return this.toArray().some(e=>e.matches(t))},u.prototype.last=function(){return this.get(-1)||null},u.prototype.unique=function(){const t=[];return this.toArray().forEach(e=>{t.includes(e)||t.push(e)}),u(t,this)},u.prototype.map=function(t){return u(this.toArray().map(t).flat().filter(Boolean),this).unique()},u.prototype.text=function(){const t=this.first();return t?t.textContent:""},u.prototype.toArray=function(){return this.nodes};const p=(t,e=[])=>(e.push(t),"BODY"!==t.tagName?p(t.parentNode,e):e);u.prototype.trigger=function(t,e=0){const r="on"+(t[0].toUpperCase()+t.slice(1));return s.act(async()=>{await Promise.all(this.map(async e=>{const s=p(e).map(t=>(t=>{const e=Object.entries(t).filter(([t])=>/^__reactEventHandlers/.test(t)).filter(Boolean)[0];return e?e[1]:null})(t)).filter(Boolean).map(t=>t[r]).filter(Boolean);this.events&&this.events[t]&&this.events[t].map(t=>t()),await Promise.all(s.map(t=>t()))})),await new Promise(t=>setTimeout(t,e))})},u.prototype.children=function(t="*"){return this.map(e=>[...e.childNodes].filter(e=>e.matches(t)))},u.prototype.closest=function(t="*"){return this.map(e=>e.closest(t))};const h=async t=>{let e=await t();for(;!e;)await s.act(async()=>{var s;await(s=50,new Promise(t=>setTimeout(t,s))),e=await t()});return e};t.default=u,t.until=t=>{return"function"==typeof t?h(t):"object"==typeof t?(e=t,new Proxy(e,{get:(t,s)=>(...t)=>h(()=>e[s](...t))})):void 0;var e},Object.defineProperty(t,"__esModule",{value:!0})}));
